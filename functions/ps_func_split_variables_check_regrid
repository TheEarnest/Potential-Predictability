#! /bin/bash
###############################################################################
# regriding, and only for ice and ocn
#------------------------------------------------------------------------------
#
set -ex
MainScript=cheeck_Prognostic_SNR
scriptname=ps_func_micom_read_and_regriding_2Df.py
ModelCompartments="ice ocn"
if [ ! -f ${MainScript} ]; then
  cd ..
fi
ScriptHome=`pwd`
OutputDIR=`grep "OutputDIR=" ${MainScript} | awk -F "=" '{print $NF}'`
tempPrefix=t_ps_func_check_Spread
thost=`echo $HOST | cut -c1-7 `
if [  "${thost}" == "hexagon" ]; then
  expCaseName=`echo ${OutputDIR} | awk -F "/" '{print $NF}'`
  DIR=/work/${USER}/SyncTransfer/${expCaseName}
  
  /work/earnest/temp
else
  DIR=${OutputDIR}
fi
funcPath=${ScriptHome}/functions

for ModelCompartment in ${ModelCompartments}; do
  if [ -d ${DIR}/${ModelCompartment}/PPP_all_variables ]; then
    tarDIR=${DIR}/${ModelCompartment}/PPP_all_variables
    tarDIR2=${DIR}/${ModelCompartment}/PPP_all_variables_org
    cd ${tarDIR}
    PPPfiles=`ls --color=no `
    for PPPfile in ${PPPfiles}; do
      vname=`cdo showvar ${PPPfile} | cut -c2-100 `
      fname=`echo ${PPPfile} | awk -F "PPP_" '{print $NF}' | awk -F ".nc" '{print $1}'`



      is_local_Lon=`ncdump -h ${PPPfile} | grep ":long_name ="  | grep "longitude" ` || is_local_Lon="None"
      if [ "${is_local_Lon}" != "None" ]; then
        is_using_local_grid=1
      else
        is_using_local_grid=0
      fi
      cd ${funcPath}
      pythoncommandstr="${scriptname} ${filename}_temp.nc ${vname} ${is_using_local_grid}"
      ${pythoncommandstr}

exit 1 
    done

  fi
done


exit 1

for SVfile in ${SVfiles}; do
  is_local_Lon=`ncdump -h ${SVfile} | grep ":long_name ="  | grep "longitude" ` || is_local_Lon="None"
  if [ "${is_local_Lon}" != "None" ]; then
    pythoncommandstr="${scriptname} ${filename}_temp.nc ${vname} ${core_count}"

  fi
  ${pythoncommandstr}
done
ncdump -v depth_bnds ${mifile} > ${depth_bnds_text} || is_not_z_level=1
if [ "${is_not_z_level}" != "1" ]; then
  dblineS=`cat -n ${depth_bnds_text} | grep "depth_bnds =" | awk -F " " '{print $1}'`
  nlevel=`cdo nlevel ${mifile} `

  for nL in `seq 1 ${nlevel}`; do 
    (( dpline = dblineS + nL ))
    UpperBound=`cat ${depth_bnds_text} | sed -n "${dpline}p" | awk -F "," '{print $1}' | bc -l`  
    BottomBound=`cat ${depth_bnds_text} | sed -n "${dpline}p" | awk -F "," '{print $2}' | bc -l`
    levelpresent=`echo "scale=2; (${BottomBound}+${UpperBound})*1.0/2.0" | bc -l `
    cdo -O sellevidx,${nL} ${mifile} ${fileprefix}_${levelpresent}
  done
fi

exit 1
