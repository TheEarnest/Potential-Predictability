#! /bin/bash
###############################################################################
# ensemble info
#------------------------------------------------------------------------------
#
${DebugSetting}
JobStartTime=`date`
JobName=ps_func_building_ensemble_mean
# 
echo ${LinnBreaker}
echo ${LinnBreaker}
echo "Starting "${JobName}" of "${compartment}" ...... "

tempPrefix=t_'ps_func_building_ensemble_mean'
###############################################################################
Mod=${compartment}
mkdir -p ${DIR}/${Mod}/hist_ensmean
mkdir -p ${DIR}/${Mod}/hist_ensspread
mkdir -p ${DIR}/${Mod}/hist_ensstd
cd ${DataDIR}/${firstMem}/${Mod}/hist
files=`ls --color=no ${prefix}*`
for file in ${files}; do
  cd ${DataDIR}
  . ${funcPath}/ps_func_check_filefix

  echo "Checking ${suffix} of ${Mod} ..."
  Target=${DIR}/${Mod}/hist_ensspread/${casePrefix}${infix}ensspread.${suffix}

  if [ ! -f ${Target} ]; then
    ensTargets=`ls ${casePrefix}_mem??/${Mod}/hist/*${suffix} `
    cdo -O ensmax ${ensTargets} ${tempDIR}/${tempPrefix}_ensmax
    cdo -O ensmin ${ensTargets} ${tempDIR}/${tempPrefix}_ensmin
    cdo -O sub ${tempDIR}/${tempPrefix}_ensmax ${tempDIR}/${tempPrefix}_ensmin ${tempDIR}/${tempPrefix}_Spread
    cp -f ${tempDIR}/${tempPrefix}_Spread ${Target}
  fi
  Target=${DIR}/${Mod}/hist_ensmean/${casePrefix}${infix}ensmean.${suffix}
  if [ ! -f ${Target} ]; then
    ensTargets=`ls ${casePrefix}_mem??/${Mod}/hist/*${suffix} `
    cdo -O ensmean ${ensTargets} ${Target}
  fi
  Target=${DIR}/${Mod}/hist_ensstd/${casePrefix}${infix}ensstd.${suffix}
  if [ ! -f ${Target} ]; then
    cdo -O ensstd ${ensTargets} ${Target}
  fi
done
${DebugSetting}
target=${DIR}/${Mod}/${casePrefix}${infix}mergetime
if [ ! -f ${target} ]; then
  time cdo -O mergetime ${DIR}/${Mod}/hist_ensmean/*${infix}* ${tempDIR}/${tempPrefix}_mergetime
  cdo -f nc copy ${tempDIR}/${tempPrefix}_mergetime ${target}
fi
target=${DIR}/${Mod}/${casePrefix}${infix}ymonmean
if [ ! -f ${target} ]; then
  time cdo -O ymonmean ${DIR}/${Mod}/${casePrefix}${infix}mergetime ${target}
fi
cdo griddes ${DIR}/${Mod}/${casePrefix}${infix}ymonmean | grep "gridID" > ${tempDIR}/${tempPrefix}_grids
grid_count=` wc -l ${tempDIR}/${tempPrefix}_grids | awk -F " " '{print $1}'`

if [ "${grid_count}" == "1" ]; then
  gridtarget=${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar
  if [ ! -f ${gridtarget} ]; then
    cdo -O sub ${DIR}/${Mod}/${casePrefix}${infix}mergetime ${DIR}/${Mod}/${casePrefix}${infix}ymonmean ${DIR}/${Mod}/${casePrefix}${infix}anomaly
    cdo -O timvar ${DIR}/${Mod}/${casePrefix}${infix}anomaly ${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar
  fi
  months=`cdo showmon ${DIR}/${Mod}/${casePrefix}${infix}ymonmean `
  imonC=0
  for month in ${months}; do
    (( imonC = imonC + 1 ))
  done
  if [ ${imonC} -gt 1 ]; then
    for month in ${months}; do 
      mm=`echo 00${month} | tail -c3 `
      cdo -O timvar -selmon,${month} ${DIR}/${Mod}/${casePrefix}${infix}anomaly ${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar_m${mm}
    done
  fi
else
  # deal with exception: some grid has no time dimention ...
  ig=`echo 000${grid_count} | tail -c3 `
  gridtarget=${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar_G${ig}
  if [ ! -f ${gridtarget} ]; then    
    cdo -O -f nc copy ${DIR}/${Mod}/${casePrefix}${infix}mergetime ${tempDIR}/${tempPrefix}_mergetime_nc
    cdo -O splitgrid ${tempDIR}/${tempPrefix}_mergetime_nc ${tempDIR}/${tempPrefix}_mergetime_G
    cdo -O -f nc copy ${DIR}/${Mod}/${casePrefix}${infix}ymonmean ${tempDIR}/${tempPrefix}_ymonmean_nc
    cdo -O splitgrid ${tempDIR}/${tempPrefix}_ymonmean_nc ${tempDIR}/${tempPrefix}_ymonmean_G
  fi
  for ig in `seq 1 ${grid_count}`; do 
    igg=`echo 000${ig} | tail -c3` 
    gridtarget=${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar_G${igg}
    if [ ! -f ${gridtarget} ]; then
      cdo -O sub ${tempDIR}/${tempPrefix}_mergetime_G${igg}.nc ${tempDIR}/${tempPrefix}_ymonmean_G${igg}.nc ${DIR}/${Mod}/${casePrefix}${infix}anomaly_G${igg}
      cdo -O timvar ${DIR}/${Mod}/${casePrefix}${infix}anomaly_G${igg} ${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar_G${igg}
    fi
    # check time dimention ...
    checkDate=`cdo showdate ${gridtarget} ` 
    if [ "${checkDate}" != "" ]; then 
      months=`cdo showmon ${DIR}/${Mod}/${casePrefix}${infix}ymonmean `
      imonC=0
      for month in ${months}; do
        (( imonC = imonC + 1 ))
      done
      if [ ${imonC} -gt 1 ]; then
        for month in ${months}; do
          mm=`echo 00${month} | tail -c3 `
          cdo -O timvar -selmon,${month} ${DIR}/${Mod}/${casePrefix}${infix}anomaly_G${igg} ${DIR}/${Mod}/${casePrefix}${infix}anomaly_timvar_m${mm}_G${igg}
        done
      fi
    fi
  done
fi

###############################################################################
echo ${JobStartTime}
echo `date`" || "${JobName}
echo ${LinnBreaker}





